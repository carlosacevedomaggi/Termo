{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/chickynice/Desktop/termo/src/shared/payments.ts"],"sourcesContent":["export type PaymentCurrency = 'USD' | 'VES'\r\n\r\nexport type PaymentField = {\r\n  id: string\r\n  label: string\r\n  type: 'text' | 'email' | 'select'\r\n  placeholder?: string\r\n  required?: boolean\r\n  options?: { label: string; value: string }[]\r\n}\r\n\r\nexport type PaymentMethod = {\r\n  id: 'zelle' | 'pagomovil' | 'bank' | 'card' | 'paypal'\r\n  label: string\r\n  description?: string\r\n  currency: PaymentCurrency\r\n  merchantInfo: { label: string; value: string }[]\r\n  fields: PaymentField[]\r\n}\r\n\r\nexport const VENEZUELAN_BANK_OPTIONS: { label: string; value: string }[] = [\r\n  { label: 'Banco de Venezuela (0102)', value: '0102' },\r\n  { label: 'Banesco (0134)', value: '0134' },\r\n  { label: 'Mercantil (0105)', value: '0105' },\r\n  { label: 'Provincial (0108)', value: '0108' },\r\n  { label: 'BNC (0191)', value: '0191' },\r\n]\r\n\r\nconst MERCHANT = {\r\n  zelleName: 'INDUSTRIAS TERMOTRONIC',\r\n  zelleEmail: 'pagos@termotronic.com',\r\n  pmFullName: 'INDUSTRIAS TERMOTRONIC',\r\n  pmPhone: '0412-TERMOTRO',\r\n  pmNationalId: 'J-301781899',\r\n  pmBankName: 'Banesco',\r\n  pmBankCode: '0134',\r\n  bankFullName: 'INDUSTRIAS TERMOTRONIC',\r\n  bankNationalId: 'J-301781899',\r\n  bankName: 'Banesco',\r\n  bankAccountType: 'Cuenta Verde Efectivo US$',\r\n  bankAccountNumber: '01341740720021814454',\r\n}\r\n\r\nexport const PAYMENT_METHODS: PaymentMethod[] = [\r\n  {\r\n    id: 'paypal',\r\n    label: 'PayPal (USD)',\r\n    description: 'Pay using your PayPal account',\r\n    currency: 'USD',\r\n    merchantInfo: [\r\n      { label: 'PayPal Business', value: 'paypal@termotronic.com' },\r\n    ],\r\n    fields: [\r\n      { id: 'paypalEmail', label: 'Correo PayPal', type: 'email', required: true },\r\n      { id: 'paypalTxn', label: 'ID de transacción (opcional)', type: 'text', placeholder: 'p. ej. 9AB12345CD6789012' },\r\n    ],\r\n  },\r\n  {\r\n    id: 'card',\r\n    label: 'Credit/Debit Card',\r\n    description: 'Pay securely with your card',\r\n    currency: 'USD',\r\n    merchantInfo: [\r\n      { label: 'Proveedor', value: 'PayPal Checkout' },\r\n      { label: 'Tarjetas', value: 'Visa, Mastercard, American Express' },\r\n    ],\r\n    fields: [\r\n      { id: 'cardHolder', label: 'Nombre en la tarjeta', type: 'text', required: true },\r\n      { id: 'cardEmail', label: 'Correo del titular', type: 'email', required: true },\r\n    ],\r\n  },\r\n  {\r\n    id: 'zelle',\r\n    label: 'Zelle (USD)',\r\n    description: 'Transfer via Zelle in USD',\r\n    currency: 'USD',\r\n    merchantInfo: [\r\n      { label: 'Recipient name', value: MERCHANT.zelleName },\r\n      { label: 'Zelle email', value: MERCHANT.zelleEmail },\r\n    ],\r\n    fields: [\r\n      { id: 'senderName', label: 'Nombre del remitente', type: 'text', required: true },\r\n      { id: 'senderEmail', label: 'Correo del remitente', type: 'email', required: true },\r\n      { id: 'confirmation', label: 'Número de confirmación (opcional)', type: 'text', placeholder: 'p. ej. ABC123' },\r\n    ],\r\n  },\r\n  {\r\n    id: 'pagomovil',\r\n    label: 'Pago Móvil (VES)',\r\n    description: 'Pago móvil interbancario en bolívares',\r\n    currency: 'VES',\r\n    merchantInfo: [\r\n      { label: 'Banco', value: `${MERCHANT.pmBankName} (${MERCHANT.pmBankCode})` },\r\n      { label: 'Titular', value: MERCHANT.pmFullName },\r\n      { label: 'Teléfono', value: MERCHANT.pmPhone },\r\n      { label: 'Cédula/RIF', value: MERCHANT.pmNationalId },\r\n    ],\r\n    fields: [\r\n      { id: 'payerPhone', label: 'Tu teléfono (Pago Móvil)', type: 'text', required: true, placeholder: '04xx-xxxxxxx' },\r\n      { id: 'payerId', label: 'Tu cédula/RIF', type: 'text', required: true, placeholder: 'V-xxxxxxx' },\r\n      { id: 'payerBank', label: 'Tu banco', type: 'select', required: true, options: VENEZUELAN_BANK_OPTIONS },\r\n      { id: 'reference', label: 'Referencia de pago', type: 'text', required: true },\r\n    ],\r\n  },\r\n  {\r\n    id: 'bank',\r\n    label: 'Depósito Banesco Verde (USD)',\r\n    description: 'Depósito directo en cuenta Banesco Verde en dólares',\r\n    currency: 'USD',\r\n    merchantInfo: [\r\n      { label: 'Banco', value: MERCHANT.bankName },\r\n      { label: 'Tipo de cuenta', value: MERCHANT.bankAccountType },\r\n      { label: 'Nº de cuenta', value: MERCHANT.bankAccountNumber },\r\n      { label: 'Titular', value: MERCHANT.bankFullName },\r\n      { label: 'RIF', value: MERCHANT.bankNationalId },\r\n      { label: 'Instrucción', value: 'Deposita en taquilla y envía el comprobante a tienda@termotronic.com' },\r\n    ],\r\n    fields: [\r\n      { id: 'depositDate', label: 'Fecha del depósito', type: 'text', required: true, placeholder: 'DD/MM/AAAA' },\r\n      { id: 'reference', label: 'Número de comprobante', type: 'text', required: true },\r\n    ],\r\n  },\r\n]\r\n\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/chickynice/Desktop/termo/src/lib/maps.ts"],"sourcesContent":["import type { PartnerLocation } from \"./partners\"\r\n\r\nexport function calculateHaversineDistance(lat1: number, lng1: number, lat2: number, lng2: number): number {\r\n  const R = 6371e3\r\n  const toRad = (value: number) => (value * Math.PI) / 180\r\n  const φ1 = toRad(lat1)\r\n  const φ2 = toRad(lat2)\r\n  const Δφ = toRad(lat2 - lat1)\r\n  const Δλ = toRad(lng2 - lng1)\r\n\r\n  const a = Math.sin(Δφ / 2) ** 2 + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) ** 2\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\r\n\r\n  return R * c\r\n}\r\n\r\nexport function sortPartnersByDistance(\r\n  partners: PartnerLocation[],\r\n  userLat: number,\r\n  userLng: number\r\n): PartnerLocation[] {\r\n  return [...partners].sort((a, b) => {\r\n    const distA = calculateHaversineDistance(userLat, userLng, a.lat, a.lng)\r\n    const distB = calculateHaversineDistance(userLat, userLng, b.lat, b.lng)\r\n    return distA - distB\r\n  })\r\n}\r\n"],"names":[],"mappings":";;;;;;AAEO,SAAS,2BAA2B,IAAY,EAAE,IAAY,EAAE,IAAY,EAAE,IAAY;IAC/F,MAAM,IAAI;IACV,MAAM,QAAQ,CAAC,QAAkB,AAAC,QAAQ,KAAK,EAAE,GAAI;IACrD,MAAM,KAAK,MAAM;IACjB,MAAM,KAAK,MAAM;IACjB,MAAM,KAAK,MAAM,OAAO;IACxB,MAAM,KAAK,MAAM,OAAO;IAExB,MAAM,IAAI,KAAK,GAAG,CAAC,KAAK,MAAM,IAAI,KAAK,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,KAAK,MAAM;IACpF,MAAM,IAAI,IAAI,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI;IAErD,OAAO,IAAI;AACb;AAEO,SAAS,uBACd,QAA2B,EAC3B,OAAe,EACf,OAAe;IAEf,OAAO;WAAI;KAAS,CAAC,IAAI,CAAC,CAAC,GAAG;QAC5B,MAAM,QAAQ,2BAA2B,SAAS,SAAS,EAAE,GAAG,EAAE,EAAE,GAAG;QACvE,MAAM,QAAQ,2BAA2B,SAAS,SAAS,EAAE,GAAG,EAAE,EAAE,GAAG;QACvE,OAAO,QAAQ;IACjB;AACF","debugId":null}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/chickynice/Desktop/termo/src/app/checkout/components/LocationStep.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useEffect, useMemo, useState } from \"react\"\r\nimport dynamic from \"next/dynamic\"\r\nimport debounce from \"lodash.debounce\"\r\n\r\nimport type { PartnerLocation } from \"@/lib/partners\"\r\nimport { sortPartnersByDistance } from \"@/lib/maps\"\r\n\r\nconst Map = dynamic(() => import(\"./Map\"), { ssr: false })\r\n\r\nexport type LocationStepValues = {\r\n  name: string\r\n  email: string\r\n  phone: string\r\n  fulfillmentMode: \"pickup\" | \"delivery\"\r\n  customerLocation: {\r\n    lat: number\r\n    lng: number\r\n    label: string\r\n  } | null\r\n  selectedPartnerId: string | null\r\n}\r\n\r\nexport type LocationStepProps = {\r\n  partners: PartnerLocation[]\r\n  value: LocationStepValues\r\n  onChange: (value: LocationStepValues) => void\r\n  errors: Record<string, string>\r\n  onErrorsChange: (errors: Record<string, string>) => void\r\n  onComplete: () => void\r\n}\r\n\r\nexport default function LocationStep({ partners, value, onChange, errors, onErrorsChange, onComplete }: LocationStepProps) {\r\n  const [searchQuery, setSearchQuery] = useState(\"\")\r\n  const [searchResults, setSearchResults] = useState<\r\n    Array<{ id: string; label: string; name: string; locality: string; lat: number; lng: number }>\r\n  >([])\r\n  const [isSearching, setIsSearching] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setSearchQuery(value.customerLocation?.label ?? \"\")\r\n  }, [value.customerLocation])\r\n\r\n  const nearestPartners = useMemo(() => {\r\n    if (!value.customerLocation) return partners.slice(0, 5)\r\n    return sortPartnersByDistance(partners, value.customerLocation.lat, value.customerLocation.lng).slice(0, 5)\r\n  }, [partners, value.customerLocation])\r\n\r\n  const selectedPartner = useMemo(() => {\r\n    return partners.find((partner) => partner.id === value.selectedPartnerId) ?? null\r\n  }, [partners, value.selectedPartnerId])\r\n\r\n  const performSearch = useMemo(\r\n    () =>\r\n      debounce(async (query: string) => {\r\n        if (!query.trim()) {\r\n          setSearchResults([])\r\n          return\r\n        }\r\n        setIsSearching(true)\r\n        try {\r\n          const response = await fetch(\"/api/geocode\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ query })\r\n          })\r\n          if (!response.ok) {\r\n            console.error(\"Geocode failed\", await response.text())\r\n            return\r\n          }\r\n          const data = await response.json()\r\n          setSearchResults(data.results)\r\n        } catch (error) {\r\n          console.error(\"Geocode error\", error)\r\n        } finally {\r\n          setIsSearching(false)\r\n        }\r\n      }, 400),\r\n    []\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (searchQuery && searchQuery !== value.customerLocation?.label) {\r\n      performSearch(searchQuery)\r\n    } else {\r\n      setSearchResults([])\r\n    }\r\n  }, [searchQuery, value.customerLocation, performSearch])\r\n\r\n  const handleLocationChange = (location: { lat: number; lng: number; label: string }) => {\r\n    onChange({\r\n      ...value,\r\n      customerLocation: location,\r\n      selectedPartnerId:\r\n        sortPartnersByDistance(partners, location.lat, location.lng)[0]?.id ?? null,\r\n    })\r\n    onErrorsChange({ ...errors, customerLocation: \"\" })\r\n  }\r\n\r\n  const validateAndContinue = () => {\r\n    const newErrors: Record<string, string> = {}\r\n    if (!value.name.trim()) newErrors.name = \"Requerido\"\r\n    if (!value.email.trim()) newErrors.email = \"Requerido\"\r\n    if (!value.customerLocation) newErrors.customerLocation = \"Selecciona una ubicación\"\r\n    if (value.fulfillmentMode === \"pickup\" && !value.selectedPartnerId) {\r\n      newErrors.selectedPartnerId = \"Selecciona un aliado\"\r\n    }\r\n    onErrorsChange(newErrors)\r\n    if (Object.keys(newErrors).length === 0) {\r\n      onComplete()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"grid gap-4 md:grid-cols-2\">\r\n        <Field\r\n          label=\"Nombre completo\"\r\n          value={value.name}\r\n          onChange={(name) => onChange({ ...value, name })}\r\n          error={errors.name}\r\n          required\r\n        />\r\n        <Field\r\n          label=\"Correo electrónico\"\r\n          type=\"email\"\r\n          value={value.email}\r\n          onChange={(email) => onChange({ ...value, email })}\r\n          error={errors.email}\r\n          required\r\n        />\r\n        <Field\r\n          label=\"Teléfono (opcional)\"\r\n          value={value.phone}\r\n          onChange={(phone) => onChange({ ...value, phone })}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"space-y-4\">\r\n        <label className=\"text-sm font-semibold uppercase tracking-[0.25em] text-slate-500\">Modalidad</label>\r\n        <div className=\"grid gap-3 md:grid-cols-2\">\r\n          <ToggleButton\r\n            label=\"Retiro en distribuidor\"\r\n            description=\"Elige el aliado más conveniente.\"\r\n            selected={value.fulfillmentMode === \"pickup\"}\r\n            onClick={() => onChange({ ...value, fulfillmentMode: \"pickup\" })}\r\n          />\r\n          <ToggleButton\r\n            label=\"Entrega a domicilio\"\r\n            description=\"Coordinamos la entrega con el aliado más cercano.\"\r\n            selected={value.fulfillmentMode === \"delivery\"}\r\n            onClick={() => onChange({ ...value, fulfillmentMode: \"delivery\" })}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"space-y-3\">\r\n        <label className=\"text-sm font-semibold uppercase tracking-[0.25em] text-slate-500\">\r\n          {value.fulfillmentMode === \"pickup\" ? \"Selecciona tu punto aliado\" : \"Dirección de entrega\"}\r\n        </label>\r\n        <div className=\"space-y-2\">\r\n          <input\r\n            value={searchQuery}\r\n            onChange={(event) => setSearchQuery(event.target.value)}\r\n            placeholder={\r\n              value.fulfillmentMode === \"pickup\"\r\n                ? \"Busca tu dirección o tu aliado\"\r\n                : \"Escribe tu dirección\"\r\n            }\r\n            className=\"w-full rounded-xl border border-slate-200 px-3 py-2 text-sm focus:border-blue-500 focus:ring-2 focus:ring-blue-200\"\r\n          />\r\n          {isSearching && <p className=\"text-xs text-slate-500\">Buscando…</p>}\r\n          {searchResults.length > 0 && (\r\n            <div className=\"max-h-48 overflow-y-auto rounded-xl border border-slate-200 bg-white shadow-sm\">\r\n              {searchResults.map((result) => (\r\n                <button\r\n                  key={result.id}\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    handleLocationChange({\r\n                      lat: result.lat,\r\n                      lng: result.lng,\r\n                      label: result.label,\r\n                    })\r\n                    setSearchResults([])\r\n                    setSearchQuery(result.label)\r\n                  }}\r\n                  className=\"flex w-full flex-col items-start px-3 py-2 text-left text-sm hover:bg-slate-100\"\r\n                >\r\n                  <span className=\"font-medium text-slate-900\">{result.name}</span>\r\n                  <span className=\"text-xs text-slate-600\">\r\n                    {result.locality ? `${result.locality} • ${result.label}` : result.label}\r\n                  </span>\r\n                </button>\r\n              ))}\r\n            </div>\r\n          )}\r\n          {errors.customerLocation && <p className=\"text-xs text-red-600\">{errors.customerLocation}</p>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"h-80 overflow-hidden rounded-2xl border border-slate-200\">\r\n        <Map\r\n          customerLocation={value.customerLocation}\r\n          partners={partners}\r\n          fulfillmentMode={value.fulfillmentMode}\r\n          selectedPartnerId={value.selectedPartnerId}\r\n          onCustomerLocationChange={handleLocationChange}\r\n          onSelectPartner={(partnerId) => onChange({ ...value, selectedPartnerId: partnerId })}\r\n        />\r\n      </div>\r\n\r\n      {value.fulfillmentMode === \"pickup\" && (\r\n        <div className=\"space-y-3\">\r\n          <h3 className=\"text-sm font-semibold text-slate-700\">Aliados sugeridos</h3>\r\n          <PickupList\r\n            options={nearestPartners}\r\n            selectedId={value.selectedPartnerId}\r\n            onSelect={(id) => onChange({ ...value, selectedPartnerId: id })}\r\n          />\r\n          {errors.selectedPartnerId && <p className=\"text-xs text-red-600\">{errors.selectedPartnerId}</p>}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"flex justify-end\">\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={validateAndContinue}>\r\n          Continuar\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Field({\r\n  label,\r\n  value,\r\n  onChange,\r\n  error,\r\n  required,\r\n  type = \"text\",\r\n}: {\r\n  label: string\r\n  value: string\r\n  onChange: (value: string) => void\r\n  error?: string\r\n  required?: boolean\r\n  type?: string\r\n}) {\r\n  return (\r\n    <label className=\"block text-sm font-medium text-slate-700\">\r\n      {label}\r\n      <input\r\n        type={type}\r\n        value={value}\r\n        required={required}\r\n        onChange={(event) => onChange(event.target.value)}\r\n        className=\"mt-1 w-full rounded-xl border border-slate-200 px-3 py-2 text-sm focus:border-blue-500 focus:ring-2 focus:ring-blue-200\"\r\n      />\r\n      {error && <span className=\"mt-1 block text-xs text-red-600\">{error}</span>}\r\n    </label>\r\n  )\r\n}\r\n\r\nfunction ToggleButton({\r\n  label,\r\n  description,\r\n  selected,\r\n  onClick,\r\n}: {\r\n  label: string\r\n  description: string\r\n  selected: boolean\r\n  onClick: () => void\r\n}) {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      onClick={onClick}\r\n      className={`rounded-2xl border px-4 py-3 text-left transition ${\r\n        selected ? \"border-slate-900 bg-slate-900/5\" : \"border-slate-200 hover:border-slate-300\"\r\n      }`}\r\n    >\r\n      <div className=\"font-semibold text-slate-900\">{label}</div>\r\n      <p className=\"mt-1 text-xs text-slate-600\">{description}</p>\r\n    </button>\r\n  )\r\n}\r\n\r\nfunction PickupList({\r\n  options,\r\n  selectedId,\r\n  onSelect,\r\n}: {\r\n  options: PartnerLocation[]\r\n  selectedId: string | null\r\n  onSelect: (id: string) => void\r\n}) {\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      {options.map((option) => (\r\n        <button\r\n          key={option.id}\r\n          type=\"button\"\r\n          onClick={() => onSelect(option.id)}\r\n          className={`flex w-full items-start justify-between rounded-xl border px-3 py-2 text-left text-sm transition ${\r\n            selectedId === option.id\r\n              ? \"border-slate-900 bg-slate-900/5\"\r\n              : \"border-slate-200 hover:border-slate-300\"\r\n          }`}\r\n        >\r\n          <div>\r\n            <div className=\"font-semibold text-slate-900\">{option.name}</div>\r\n            <div className=\"text-xs text-slate-600\">{option.address}</div>\r\n            <div className=\"text-[11px] uppercase tracking-wide text-slate-400\">{option.cityState}</div>\r\n          </div>\r\n          <div className=\"text-xs text-slate-500\">\r\n            {selectedId === option.id ? \"Seleccionado\" : \"Elegir\"}\r\n          </div>\r\n        </button>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 839, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/chickynice/Desktop/termo/src/lib/partners.ts"],"sourcesContent":["import rawData from \"@/data/partner-coordinates.json\"\r\n\r\nexport type PartnerLocation = {\r\n  id: string\r\n  type: \"distributor\" | \"service\"\r\n  name: string\r\n  address: string\r\n  cityState: string\r\n  lat: number\r\n  lng: number\r\n  source?: string\r\n}\r\n\r\nconst partners: PartnerLocation[] = Object.entries(rawData).map(([key, value]) => ({\r\n  id: key,\r\n  type: value.type as PartnerLocation[\"type\"],\r\n  name: value.name,\r\n  address: value.address,\r\n  cityState: value.cityState,\r\n  lat: value.lat,\r\n  lng: value.lng,\r\n  source: value.source,\r\n}))\r\n\r\nexport function getAllPartners(): PartnerLocation[] {\r\n  return partners\r\n}\r\n\r\nexport function getPartnersByType(type: PartnerLocation[\"type\"]): PartnerLocation[] {\r\n  return partners.filter((partner) => partner.type === type)\r\n}\r\n\r\nexport function getPartnerById(id: string | null | undefined): PartnerLocation | null {\r\n  if (!id) return null\r\n  return partners.find((partner) => partner.id === id) ?? null\r\n}\r\n"],"names":[],"mappings":";;;;;;;;AAAA;;AAaA,MAAM,WAA8B,OAAO,OAAO,CAAC,wHAAO,EAAE,GAAG,CAAC;QAAC,CAAC,KAAK,MAAM;WAAM;QACjF,IAAI;QACJ,MAAM,MAAM,IAAI;QAChB,MAAM,MAAM,IAAI;QAChB,SAAS,MAAM,OAAO;QACtB,WAAW,MAAM,SAAS;QAC1B,KAAK,MAAM,GAAG;QACd,KAAK,MAAM,GAAG;QACd,QAAQ,MAAM,MAAM;IACtB;;AAEO,SAAS;IACd,OAAO;AACT;AAEO,SAAS,kBAAkB,IAA6B;IAC7D,OAAO,SAAS,MAAM,CAAC,CAAC,UAAY,QAAQ,IAAI,KAAK;AACvD;AAEO,SAAS,eAAe,EAA6B;IAC1D,IAAI,CAAC,IAAI,OAAO;QACT;IAAP,OAAO,CAAA,iBAAA,SAAS,IAAI,CAAC,CAAC,UAAY,QAAQ,EAAE,KAAK,iBAA1C,4BAAA,iBAAiD;AAC1D","debugId":null}},
    {"offset": {"line": 880, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/chickynice/Desktop/termo/src/app/checkout/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useMemo, useState } from \"react\"\nimport { useRouter } from \"next/navigation\"\n\nimport { useCartStore } from \"@/store/cart\"\nimport { PAYMENT_METHODS } from \"@/shared/payments\"\nimport { usePayPalConfig } from \"../PayPalProvider\"\nimport LocationStep, { LocationStepValues } from \"./components/LocationStep\"\nimport { getPartnerById, getPartnersByType } from \"@/lib/partners\"\nimport { sortPartnersByDistance } from \"@/lib/maps\"\n\ntype Step = 1 | 2 | 3 | 4\n\ntype DeliveryInfo = {\n  partnerId: string\n  partnerName: string\n  partnerAddress: string\n  partnerCityState: string\n  minutes: number\n  minutesCapped: number\n  fee: number\n  distanceMeters: number | null\n  source: \"ors\" | \"fallback\"\n}\n\ntype OrderResult = {\n  id: string\n  status: string\n}\n\nexport default function CheckoutPage() {\n  const router = useRouter()\n  const { items, clear } = useCartStore()\n  const [isHydrated, setIsHydrated] = useState(false)\n\n  useEffect(() => {\n    setIsHydrated(true)\n  }, [])\n\n  const distributors = useMemo(() => getPartnersByType(\"distributor\"), [])\n\n  const baseTotal = useMemo(() => items.reduce((acc, item) => acc + item.price * (item.quantity ?? 1), 0), [items])\n  const orderItems = useMemo(\n    () =>\n      items.map((item) => ({\n        key: item.id,\n        name: item.name,\n        quantity: item.quantity ?? 1,\n        total: item.price * (item.quantity ?? 1),\n      })),\n    [items]\n  )\n\n  const [step, setStep] = useState<Step>(1)\n  const [locationValues, setLocationValues] = useState<LocationStepValues>({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    fulfillmentMode: \"pickup\",\n    customerLocation: null,\n    selectedPartnerId: null,\n  })\n  const [locationErrors, setLocationErrors] = useState<Record<string, string>>({})\n  const [deliveryInfo, setDeliveryInfo] = useState<DeliveryInfo | null>(null)\n\n  useEffect(() => {\n    if (!locationValues.customerLocation) {\n      setDeliveryInfo(null)\n      return\n    }\n    if (locationValues.fulfillmentMode !== \"delivery\" || !locationValues.selectedPartnerId) {\n      setDeliveryInfo(null)\n      return\n    }\n    const partner = getPartnerById(locationValues.selectedPartnerId)\n    if (!partner) {\n      setDeliveryInfo(null)\n      return\n    }\n    fetchDirections(\n      locationValues.customerLocation.lat,\n      locationValues.customerLocation.lng,\n      {\n        id: partner.id,\n        name: partner.name,\n        address: partner.address,\n        cityState: partner.cityState,\n        lat: partner.lat,\n        lng: partner.lng,\n      }\n    ).then((result) => {\n      if (result) {\n        setDeliveryInfo(result)\n      }\n    })\n  }, [locationValues.customerLocation, locationValues.fulfillmentMode, locationValues.selectedPartnerId])\n\n  async function fetchDirections(\n    customerLat: number,\n    customerLng: number,\n    partner: { id: string; name: string; address: string; cityState: string; lat: number; lng: number }\n  ): Promise<DeliveryInfo | null> {\n    try {\n      const response = await fetch(\"/api/directions\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          start: { lat: customerLat, lng: customerLng },\n          end: { lat: partner.lat, lng: partner.lng },\n        }),\n      })\n      if (!response.ok) {\n        const text = await response.text()\n        console.warn(\"Directions failed\", text)\n        return fallbackDeliveryInfo(customerLat, customerLng, partner)\n      }\n      const data = await response.json()\n      const durationMinutes = Math.round((data.duration ?? 0) / 60)\n      const minutesCapped = Math.min(durationMinutes, 45)\n      const fee = minutesCapped * 0.5\n      return {\n        partnerId: partner.id,\n        partnerName: partner.name,\n        partnerAddress: partner.address,\n        partnerCityState: partner.cityState,\n        minutes: durationMinutes,\n        minutesCapped,\n        fee,\n        distanceMeters: data.distance ?? null,\n        source: \"ors\",\n      }\n    } catch (error) {\n      console.warn(\"Directions error\", error)\n      return fallbackDeliveryInfo(customerLat, customerLng, partner)\n    }\n  }\n\n  function fallbackDeliveryInfo(\n    customerLat: number,\n    customerLng: number,\n    partner: { id: string; name: string; address: string; cityState: string; lat: number; lng: number }\n  ): DeliveryInfo {\n    const distanceMeters = calculateDistance(customerLat, customerLng, partner.lat, partner.lng)\n    const averageSpeedKmh = 40\n    const timeHours = distanceMeters / 1000 / averageSpeedKmh\n    const durationMinutes = Math.round(timeHours * 60)\n    const minutesCapped = Math.max(10, Math.min(durationMinutes, 45))\n    const fee = minutesCapped * 0.5\n    return {\n      partnerId: partner.id,\n      partnerName: partner.name,\n      partnerAddress: partner.address,\n      partnerCityState: partner.cityState,\n      minutes: durationMinutes,\n      minutesCapped,\n      fee,\n      distanceMeters,\n      source: \"fallback\",\n    }\n  }\n\n  const [paymentMethodId, setPaymentMethodId] = useState<string>(PAYMENT_METHODS[0]?.id ?? \"paypal\")\n  const selectedMethod = useMemo(() => PAYMENT_METHODS.find((method) => method.id === paymentMethodId)!, [paymentMethodId])\n  const [paymentFields, setPaymentFields] = useState<Record<string, string>>({})\n  const [paymentErrors, setPaymentErrors] = useState<Record<string, string>>({})\n  const [receiptPreference, setReceiptPreference] = useState<\"email\" | \"phone\">(\"email\")\n  const [paypalOrderId, setPaypalOrderId] = useState<string | null>(null)\n  const [orderResult, setOrderResult] = useState<OrderResult | null>(null)\n  const [submitState, setSubmitState] = useState<\"idle\" | \"processing\">(\"idle\")\n  const [submittedSummary, setSubmittedSummary] = useState<{\n    items: { key: string; name: string; quantity: number; total: number }[]\n    baseTotal: number\n    deliveryFee: number\n    orderTotal: number\n  } | null>(null)\n  const { isConfigured: isPayPalConfigured } = usePayPalConfig()\n\n  const deliveryFee = locationValues.fulfillmentMode === \"delivery\" && deliveryInfo ? deliveryInfo.fee : 0\n  const orderTotal = baseTotal + deliveryFee\n\n  const phoneMasked = locationValues.phone ? `***-${locationValues.phone.slice(-3)}` : \"No proporcionado\"\n\n  const canContinueStep2 =\n    (locationValues.fulfillmentMode === \"pickup\" && locationValues.selectedPartnerId) ||\n    (locationValues.fulfillmentMode === \"delivery\" && deliveryInfo)\n  const paypalSelected = paymentMethodId === \"paypal\" || paymentMethodId === \"card\"\n  const canContinueStep3 = submitState !== \"processing\"\n\n  if (!items.length && !submittedSummary && step !== 4) {\n    return (\n      <div className=\"container-edge py-16 text-center\">\n        <h1 className=\"text-2xl font-semibold\">Tu carrito está vacío</h1>\n        <p className=\"mt-3 text-sm text-slate-600\">Agrega productos para iniciar el proceso de compra.</p>\n      </div>\n    )\n  }\n\n  if (!isHydrated) {\n    return (\n      <div className=\"container-edge py-16 text-center\">\n        <h1 className=\"text-2xl font-semibold\">Checkout</h1>\n        <p className=\"mt-2 text-sm text-slate-600\">Cargando detalles del pedido…</p>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"container-edge py-12\">\n      <h1 className=\"text-3xl font-semibold\">Checkout</h1>\n      <Stepper currentStep={step} />\n      <div className=\"mt-8 grid gap-8 lg:grid-cols-[minmax(0,1fr)_minmax(320px,0.7fr)]\">\n        <div className=\"space-y-6\">\n          {step === 1 && (\n            <StepCard title=\"1. Información y ubicación\">\n              <LocationStep\n                partners={distributors}\n                value={locationValues}\n                onChange={(updated) => setLocationValues(updated)}\n                errors={locationErrors}\n                onErrorsChange={setLocationErrors}\n                onComplete={() => setStep(2)}\n              />\n            </StepCard>\n          )}\n\n          {step === 2 && (\n            <StepCard title=\"2. Entrega y método de pago\">\n              <section className=\"space-y-4\">\n                <h3 className=\"text-sm font-semibold uppercase tracking-[0.25em] text-slate-500\">Modalidad</h3>\n                <div className=\"grid gap-3 md:grid-cols-2\">\n                  <OptionButton\n                    label=\"Retiro en distribuidor\"\n                    description=\"Elige el punto aliado más conveniente para retirar tu pedido.\"\n                    selected={locationValues.fulfillmentMode === \"pickup\"}\n                    onClick={() => {\n                      setLocationValues((prev) => ({ ...prev, fulfillmentMode: \"pickup\" }))\n                      setDeliveryInfo(null)\n                    }}\n                  />\n                  <OptionButton\n                    label=\"Entrega a domicilio\"\n                    description=\"Coordinamos con el aliado más cercano y calculamos el cargo de envío.\"\n                    selected={locationValues.fulfillmentMode === \"delivery\"}\n                    onClick={async () => {\n                      const partner = locationValues.selectedPartnerId\n                        ? getPartnerById(locationValues.selectedPartnerId)\n                        : null\n                      setLocationValues((prev) => ({ ...prev, fulfillmentMode: \"delivery\" }))\n                      if (partner && locationValues.customerLocation) {\n                        fetchDirections(\n                          locationValues.customerLocation.lat,\n                          locationValues.customerLocation.lng,\n                          {\n                            id: partner.id,\n                            name: partner.name,\n                            address: partner.address,\n                            cityState: partner.cityState,\n                            lat: partner.lat,\n                            lng: partner.lng,\n                          }\n                        ).then((result) => {\n                          if (result) setDeliveryInfo(result)\n                        })\n                      }\n                    }}\n                  />\n            </div>\n              </section>\n\n              <section className=\"mt-6 space-y-3\">\n                <h3 className=\"text-sm font-semibold uppercase tracking-[0.25em] text-slate-500\">\n                  {locationValues.fulfillmentMode === \"pickup\" ? \"Aliado seleccionado\" : \"Entrega coordinada\"}\n                </h3>\n                <FulfillmentSummary\n                  fulfillmentMode={locationValues.fulfillmentMode}\n                  selectedPartnerId={locationValues.selectedPartnerId}\n                  deliveryInfo={deliveryInfo}\n                  customerLocation={locationValues.customerLocation}\n                />\n              </section>\n\n              <section className=\"mt-6 space-y-3\">\n                <h3 className=\"text-sm font-semibold uppercase tracking-[0.25em] text-slate-500\">Método de pago</h3>\n            <div className=\"grid gap-3\">\n                  {PAYMENT_METHODS.map((method) => (\n                    <label\n                      key={method.id}\n                      className={`rounded-xl border p-3 transition ${\n                        paymentMethodId === method.id\n                          ? \"border-slate-900 bg-slate-900/5\"\n                          : \"border-slate-200 hover:border-slate-300\"\n                      }`}\n                    >\n                      <div className=\"flex items-start gap-3\">\n                        <input\n                          type=\"radio\"\n                          className=\"mt-1 accent-slate-900\"\n                          checked={paymentMethodId === method.id}\n                          onChange={() => setPaymentMethodId(method.id)}\n                        />\n                    <div className=\"flex-1\">\n                          <div className=\"flex flex-wrap items-center gap-2\">\n                            <span className=\"font-semibold text-slate-900\">{method.label}</span>\n                            <span className=\"rounded-full bg-slate-900/5 px-2 py-0.5 text-[10px] font-semibold uppercase tracking-wide text-slate-600\">\n                              {method.currency}\n                            </span>\n                      </div>\n                          {method.description && (\n                            <p className=\"mt-1 text-sm text-slate-600\">{method.description}</p>\n                          )}\n                    </div>\n                  </div>\n                </label>\n              ))}\n            </div>\n              </section>\n\n              <StepActions\n                onBack={() => setStep(1)}\n                onNext={() => setStep(3)}\n                nextDisabled={!canContinueStep2}\n                nextLabel=\"Confirmar medios\"\n                backLabel=\"Regresar\"\n              />\n            </StepCard>\n          )}\n\n          {step === 3 && (\n            <StepCard title=\"3. Pago y recibo\">\n              <section className=\"space-y-4\">\n                <InstructionsList method={selectedMethod} />\n\n                {selectedMethod.fields.length > 0 && (\n            <div className=\"grid gap-4\">\n                    {selectedMethod.fields.map((field) => (\n                      <div key={field.id}>\n                        <label className=\"text-sm font-medium text-slate-700\">{field.label}</label>\n                        {field.type === \"select\" ? (\n                          <select\n                            className=\"mt-1 w-full rounded-xl border border-slate-200 bg-white px-3 py-2 text-sm focus:border-blue-500 focus:ring-2 focus:ring-blue-200\"\n                            value={paymentFields[field.id] ?? \"\"}\n                            onChange={(event) =>\n                              setPaymentFields((prev) => ({ ...prev, [field.id]: event.target.value }))\n                            }\n                          >\n                            <option value=\"\">Selecciona…</option>\n                            {(field.options ?? []).map((option) => (\n                              <option key={option.value} value={option.value}>\n                                {option.label}\n                              </option>\n                            ))}\n                    </select>\n                  ) : (\n                          <input\n                            type={field.type === \"email\" ? \"email\" : \"text\"}\n                            placeholder={field.placeholder}\n                            className=\"mt-1 w-full rounded-xl border border-slate-200 px-3 py-2 text-sm focus:border-blue-500 focus:ring-2 focus:ring-blue-200\"\n                            value={paymentFields[field.id] ?? \"\"}\n                            onChange={(event) =>\n                              setPaymentFields((prev) => ({ ...prev, [field.id]: event.target.value }))\n                            }\n                          />\n                        )}\n                        {paymentErrors[field.id] && (\n                          <p className=\"mt-1 text-xs text-red-600\">{paymentErrors[field.id]}</p>\n                        )}\n                </div>\n              ))}\n            </div>\n                )}\n\n                {paypalSelected && (\n                  <div className=\"rounded-xl border border-blue-200 bg-blue-50 px-4 py-3 text-sm text-blue-800\">\n                    {isPayPalConfigured\n                      ? \"El pago con PayPal/Tarjeta será simulado en este entorno.\"\n                      : \"Sin PayPal configurado: la simulación aprobará el pago automáticamente. Para producción, reemplaza este bloque con PayPalButtons.\"}\n                  </div>\n                )}\n\n                <section className=\"space-y-3\">\n                  <h4 className=\"text-sm font-semibold text-slate-700\">¿Cómo prefieres recibir tu comprobante?</h4>\n                  <div className=\"grid gap-2 md:grid-cols-2\">\n                    <label\n                      className={`rounded-xl border px-3 py-2 text-sm ${\n                        receiptPreference === \"email\"\n                          ? \"border-slate-900 bg-slate-900/5\"\n                          : \"border-slate-200 hover:border-slate-300\"\n                      }`}\n                    >\n                      <input\n                        type=\"radio\"\n                        name=\"receipt\"\n                        className=\"mr-2 accent-slate-900\"\n                        checked={receiptPreference === \"email\"}\n                        onChange={() => setReceiptPreference(\"email\")}\n                      />\n                      Enviar al correo: <span className=\"font-medium\">{locationValues.email}</span>\n                    </label>\n                    <label\n                      className={`rounded-xl border px-3 py-2 text-sm ${\n                        receiptPreference === \"phone\"\n                          ? \"border-slate-900 bg-slate-900/5\"\n                          : \"border-slate-200 hover:border-slate-300\"\n                      }`}\n                    >\n                      <input\n                        type=\"radio\"\n                        name=\"receipt\"\n                        className=\"mr-2 accent-slate-900\"\n                        checked={receiptPreference === \"phone\"}\n                        onChange={() => setReceiptPreference(\"phone\")}\n                        disabled={!locationValues.phone}\n                      />\n                      WhatsApp ({phoneMasked})\n                      {!locationValues.phone && (\n                        <span className=\"ml-2 text-xs text-slate-500\">Agrega un número en el paso 1</span>\n                      )}\n                    </label>\n          </div>\n                </section>\n              </section>\n\n              <StepActions\n                onBack={() => setStep(2)}\n                onNext={async () => {\n                  const fieldErrors: Record<string, string> = {}\n                  selectedMethod.fields.forEach((field) => {\n                    if (field.required && !paymentFields[field.id]) {\n                      fieldErrors[field.id] = \"Requerido\"\n                    }\n                  })\n                  if (receiptPreference === \"phone\" && !locationValues.phone) {\n                    fieldErrors.receipt = \"Debes registrar un número de teléfono\"\n                  }\n                  setPaymentErrors(fieldErrors)\n                  if (Object.keys(fieldErrors).length > 0) {\n                    return\n                  }\n\n                  setSubmitState(\"processing\")\n                  try {\n                    const payload = {\n                      name: locationValues.name,\n                      email: locationValues.email,\n                      phone: locationValues.phone || null,\n                      address: locationValues.customerLocation?.label ?? \"\",\n                      method: paymentMethodId,\n                      currency: selectedMethod.currency,\n                      amount: Math.round(orderTotal * 100),\n                      items: orderItems.map((item) => ({\n                        id: item.key,\n                        name: item.name,\n                        price: Math.round((item.total / item.quantity) * 100),\n                        quantity: item.quantity,\n                      })),\n                      reference: (() => {\n                        if (paypalSelected) {\n                          const generated = paypalOrderId ?? `mock-paypal-${Date.now()}`\n                          setPaypalOrderId(generated)\n                          return generated\n                        }\n                        return paymentFields.reference ?? null\n                      })(),\n                      receiptPreference,\n                      manualPaymentMethod: paymentMethodId,\n                      fulfillmentType: locationValues.fulfillmentMode === \"pickup\" ? \"PICKUP\" : \"DELIVERY\",\n                      pickupLocationId: locationValues.selectedPartnerId,\n                      pickupLocationName: getPartnerById(locationValues.selectedPartnerId)?.name ?? null,\n                      pickupLocationAddress: getPartnerById(locationValues.selectedPartnerId)?.address ?? null,\n                      fulfillmentLocationId: locationValues.selectedPartnerId,\n                      deliveryEtaMinutes: deliveryInfo?.minutes ?? null,\n                      deliveryFee: deliveryInfo ? Math.round(deliveryInfo.fee * 100) : 0,\n                      customerCoordinates: locationValues.customerLocation\n                        ? {\n                            lat: locationValues.customerLocation.lat,\n                            lng: locationValues.customerLocation.lng,\n                          }\n                        : null,\n                      partnerCoordinates: locationValues.selectedPartnerId\n                        ? {\n                            lat: getPartnerById(locationValues.selectedPartnerId!)?.lat ?? null,\n                            lng: getPartnerById(locationValues.selectedPartnerId!)?.lng ?? null,\n                          }\n                        : null,\n                      metadata: {\n                        ...paymentFields,\n                        ...(paypalSelected ? { simulation: true } : {}),\n                        customerCoordinates: locationValues.customerLocation,\n                        partnerCoordinates: locationValues.selectedPartnerId\n                          ? {\n                              lat: getPartnerById(locationValues.selectedPartnerId!)?.lat ?? null,\n                              lng: getPartnerById(locationValues.selectedPartnerId!)?.lng ?? null,\n                            }\n                          : null,\n                      },\n                    }\n\n                    console.log(\"submit-order payload:\\n\" + JSON.stringify(payload, null, 2))\n\n                    const response = await fetch(\"/api/orders\", {\n                      method: \"POST\",\n                      headers: { \"Content-Type\": \"application/json\" },\n                      body: JSON.stringify(payload),\n                    })\n                    if (!response.ok) {\n                      throw new Error(\"Order creation failed\")\n                    }\n                    const data = (await response.json()) as OrderResult\n                    const snapshotItems = orderItems.map((item) => ({ ...item }))\n                    setSubmittedSummary({\n                      items: snapshotItems,\n                      baseTotal,\n                      deliveryFee,\n                      orderTotal,\n                    })\n                    setOrderResult(data)\n                    setStep(4)\n                    setTimeout(() => clear(), 0)\n                  } catch (error) {\n                    console.error(error)\n                    setPaymentErrors((prev) => ({ ...prev, root: \"No se pudo procesar el pedido. Intenta nuevamente.\" }))\n                  } finally {\n                    setSubmitState(\"idle\")\n                  }\n                }}\n                nextDisabled={!canContinueStep3 || submitState === \"processing\"}\n                nextLabel=\"Confirmar pedido\"\n                backLabel=\"Regresar\"\n              />\n              {paymentErrors.root && <p className=\"mt-3 text-sm text-red-600\">{paymentErrors.root}</p>}\n            </StepCard>\n          )}\n\n          {step === 4 && (\n            <StepCard title=\"4. Confirmación\">\n              <div className=\"space-y-4\">\n                <h2 className=\"text-2xl font-semibold text-slate-900\">\n                  {orderResult?.status === \"paid\"\n                    ? \"¡Gracias por su compra!\"\n                    : \"Gracias por su pedido\"}\n                </h2>\n                <p className=\"text-sm text-slate-700\">\n                  {orderResult?.status === \"paid\"\n                    ? \"Hemos registrado el pago y enviaremos el comprobante según su preferencia.\"\n                    : \"Su solicitud quedó en revisión. Validaremos el pago manual en menos de 48 horas y recibirá su comprobante.\"}\n                </p>\n                <div className=\"rounded-xl border border-slate-200 bg-white p-4 text-sm text-slate-700\">\n                  <p>\n                    <span className=\"font-semibold\">Número de seguimiento:</span> {orderResult?.id ?? \"-\"}\n                  </p>\n                  <p className=\"mt-2\">\n                    <span className=\"font-semibold\">Recibo vía:</span> {receiptPreference === \"email\" ? locationValues.email : phoneMasked}\n                  </p>\n                </div>\n                <button\n                  className=\"btn btn-outline\"\n                  onClick={() => router.push(\"/\")}\n                >\n                  Volver al inicio\n                </button>\n              </div>\n            </StepCard>\n          )}\n        </div>\n\n        <aside className=\"space-y-4\">\n          <OrderSummary\n            items={submittedSummary?.items ?? orderItems}\n            baseTotal={submittedSummary?.baseTotal ?? baseTotal}\n            deliveryFee={submittedSummary?.deliveryFee ?? deliveryFee}\n            orderTotal={submittedSummary?.orderTotal ?? orderTotal}\n            deliveryInfo={locationValues.fulfillmentMode === \"delivery\" ? deliveryInfo : null}\n          />\n        </aside>\n      </div>\n    </div>\n  )\n}\n\nfunction Stepper({ currentStep }: { currentStep: Step }) {\n  const steps = [\n    \"Información\",\n    \"Entrega\",\n    \"Pago\",\n    \"Confirmación\",\n  ]\n  return (\n    <div className=\"mt-6 grid gap-3 md:grid-cols-4\">\n      {steps.map((label, index) => {\n        const stepNumber = (index + 1) as Step\n        const completed = currentStep > stepNumber\n        const active = currentStep === stepNumber\n        return (\n          <div\n            key={label}\n            className={`rounded-2xl border px-4 py-3 text-sm transition ${\n              active\n                ? \"border-slate-900 bg-slate-900 text-white\"\n                : completed\n                ? \"border-emerald-400 bg-emerald-50 text-emerald-700\"\n                : \"border-slate-200 bg-white text-slate-600\"\n            }`}\n          >\n            <div className=\"text-xs uppercase tracking-[0.3em]\">Paso {index + 1}</div>\n            <div className=\"mt-1 font-semibold\">{label}</div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nfunction StepCard({ title, children }: { title: string; children: React.ReactNode }) {\n  return (\n    <div className=\"rounded-3xl border border-slate-200 bg-white p-6 shadow-sm\">\n      <h2 className=\"text-lg font-semibold text-slate-900\">{title}</h2>\n      <div className=\"mt-4 space-y-4\">{children}</div>\n              </div>\n  )\n}\n\nfunction Field({\n  label,\n  id,\n  value,\n  onChange,\n  error,\n  type = \"text\",\n  required,\n  className,\n}: {\n  label: string\n  id: string\n  value: string\n  onChange: (value: string) => void\n  error?: string\n  type?: string\n  required?: boolean\n  className?: string\n}) {\n  return (\n    <label className={`block ${className ?? \"\"}`} htmlFor={id}>\n      <span className=\"text-sm font-medium text-slate-700\">{label}</span>\n      <input\n        id={id}\n        type={type}\n        required={required}\n        value={value}\n        onChange={(event) => onChange(event.target.value)}\n        className=\"mt-1 w-full rounded-xl border border-slate-200 px-3 py-2 text-sm focus:border-blue-500 focus:ring-2 focus:ring-blue-200\"\n      />\n      {error && <span className=\"mt-1 block text-xs text-red-600\">{error}</span>}\n    </label>\n  )\n}\n\nfunction StepActions({\n  onBack,\n  onNext,\n  nextDisabled,\n  nextLabel,\n  backLabel,\n}: {\n  onBack?: () => void\n  onNext: () => void | Promise<void>\n  nextDisabled?: boolean\n  nextLabel: string\n  backLabel?: string\n}) {\n  return (\n    <div className=\"flex flex-col gap-3 pt-4 sm:flex-row sm:justify-end\">\n      {onBack && (\n        <button onClick={onBack} type=\"button\" className=\"btn btn-outline sm:w-auto\">\n          {backLabel ?? \"Anterior\"}\n        </button>\n      )}\n      <button\n        type=\"button\"\n        className=\"btn btn-primary sm:w-auto\"\n        disabled={nextDisabled}\n        onClick={onNext}\n      >\n        {nextLabel}\n      </button>\n          </div>\n  )\n}\n\nfunction OptionButton({\n  label,\n  description,\n  selected,\n  onClick,\n}: {\n  label: string\n  description: string\n  selected: boolean\n  onClick: () => void\n}) {\n  return (\n    <button\n      type=\"button\"\n      onClick={onClick}\n      className={`rounded-2xl border px-4 py-3 text-left transition ${\n        selected ? \"border-slate-900 bg-slate-900/5\" : \"border-slate-200 hover:border-slate-300\"\n      }`}\n    >\n      <div className=\"font-semibold text-slate-900\">{label}</div>\n      <p className=\"mt-1 text-xs text-slate-600\">{description}</p>\n    </button>\n  )\n}\n\nfunction PickupChooser({\n  options,\n  selectedId,\n  onSelect,\n}: {\n  options: PickupOption[]\n  selectedId: string\n  onSelect: (id: string) => void\n}) {\n  if (!options.length) {\n    return (\n      <div className=\"rounded-xl border border-slate-200 bg-slate-50 px-4 py-3 text-sm text-slate-600\">\n        Completa tu dirección para sugerirte aliados cercanos o contáctanos para coordinar la entrega.\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-3\">\n      {options.map((option, index) => (\n        <label\n          key={option.id}\n          className={`flex items-start gap-3 rounded-2xl border px-4 py-3 transition ${\n            selectedId === option.id\n              ? \"border-slate-900 bg-slate-900/5\"\n              : \"border-slate-200 hover:border-slate-300\"\n          }`}\n        >\n          <input\n            type=\"radio\"\n            className=\"mt-1 accent-slate-900\"\n            checked={selectedId === option.id}\n            onChange={() => onSelect(option.id)}\n          />\n          <div>\n            <div className=\"flex items-center gap-2 text-sm font-semibold text-slate-900\">\n              {option.name}\n              {index === 0 && (\n                <span className=\"rounded-full bg-emerald-100 px-2 py-0.5 text-[10px] font-semibold uppercase tracking-wide text-emerald-700\">\n                  Recomendado\n                </span>\n              )}\n            </div>\n            <p className=\"text-xs text-slate-600\">{option.address}</p>\n            <p className=\"text-[11px] uppercase tracking-wide text-slate-400\">{option.cityState}</p>\n            </div>\n        </label>\n          ))}\n        </div>\n  )\n}\n\nfunction FulfillmentSummary({\n  fulfillmentMode,\n  selectedPartnerId,\n  deliveryInfo,\n  customerLocation,\n}: {\n  fulfillmentMode: \"pickup\" | \"delivery\"\n  selectedPartnerId: string | null\n  deliveryInfo: DeliveryInfo | null\n  customerLocation: { lat: number; lng: number; label: string } | null\n}) {\n  const partner = selectedPartnerId ? getPartnerById(selectedPartnerId) : null\n\n  if (!partner) {\n    return (\n      <div className=\"rounded-xl border border-slate-200 bg-slate-50 px-4 py-3 text-sm text-slate-600\">\n        Selecciona un aliado en el paso anterior.\n      </div>\n    )\n  }\n\n  const distanceKm = customerLocation\n    ? (calculateDistance(customerLocation.lat, customerLocation.lng, partner.lat, partner.lng) / 1000).toFixed(1)\n    : null\n\n  if (fulfillmentMode === \"pickup\") {\n    return (\n      <div className=\"rounded-2xl border border-slate-200 bg-slate-900/5 p-4\">\n        <div className=\"text-sm font-semibold text-slate-900\">{partner.name}</div>\n        <p className=\"text-xs text-slate-600\">{partner.address}</p>\n        <p className=\"text-[11px] uppercase tracking-wide text-slate-400\">{partner.cityState}</p>\n        {distanceKm && customerLocation && (\n          <p className=\"mt-2 text-xs text-slate-500\">Aproximadamente {distanceKm} km desde tu ubicación.</p>\n        )}\n      </div>\n    )\n  }\n\n  if (!deliveryInfo) {\n    return (\n      <div className=\"rounded-xl border border-slate-200 bg-slate-50 px-4 py-3 text-sm text-slate-600\">\n        Calcularemos el aliado más cercano una vez ingreses tu dirección completa.\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"rounded-2xl border border-slate-200 bg-slate-900/5 p-4\">\n      <div className=\"text-sm font-semibold text-slate-900\">Aliado asignado: {partner.name}</div>\n      <p className=\"text-xs text-slate-600\">{partner.address}</p>\n      <p className=\"text-[11px] uppercase tracking-wide text-slate-400\">{partner.cityState}</p>\n      <div className=\"mt-3 flex flex-wrap items-center gap-3 text-xs text-slate-700\">\n        <span className=\"rounded-full bg-slate-900/5 px-2 py-1 font-semibold\">Estimado: {deliveryInfo.minutes} min</span>\n        <span className=\"rounded-full bg-slate-900/5 px-2 py-1 font-semibold\">Cobrado: {deliveryInfo.minutesCapped} min</span>\n        <span className=\"rounded-full bg-slate-900/5 px-2 py-1 font-semibold\">Cargo adicional: ${deliveryInfo.fee.toFixed(2)}</span>\n      </div>\n      <div className=\"mt-2 text-xs text-slate-500\">\n        Fuente: {deliveryInfo.source === \"ors\" ? \"Ruta ORS\" : \"Estimación\"}\n        </div>\n      {distanceKm && (\n        <div className=\"mt-4 text-xs text-slate-600\">Distancia aproximada: {distanceKm} km.</div>\n      )}\n      <div className=\"mt-4 rounded-xl border border-dashed border-slate-300 bg-white px-3 py-2 text-xs text-slate-600\">\n        El costo de envío se calcula a $0.50 por minuto (máximo 45 minutos), utilizando el aliado sugerido.\n      </div>\n    </div>\n  )\n}\n\nfunction InstructionsList({ method }: { method: (typeof PAYMENT_METHODS)[number] }) {\n  return (\n    <div className=\"rounded-2xl border border-slate-200 bg-slate-900/5 p-4\">\n      <h4 className=\"text-sm font-semibold uppercase tracking-[0.2em] text-slate-500\">Instrucciones</h4>\n      <ul className=\"mt-3 space-y-1 text-sm text-slate-700\">\n        {method.merchantInfo.map((info) => (\n          <li key={info.label} className=\"flex items-center justify-between gap-4\">\n            <span className=\"text-slate-500\">{info.label}</span>\n            <span className=\"font-semibold text-slate-900\">{info.value}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nfunction OrderSummary({\n  items,\n  baseTotal,\n  deliveryFee,\n  orderTotal,\n  deliveryInfo,\n}: {\n  items: { key: string; name: string; quantity: number; total: number }[]\n  baseTotal: number\n  deliveryFee: number\n  orderTotal: number\n  deliveryInfo: DeliveryInfo | null\n}) {\n  return (\n    <div className=\"rounded-3xl border border-slate-200 bg-white p-6 shadow-sm\">\n      <h2 className=\"text-lg font-semibold text-slate-900\">Resumen del pedido</h2>\n      <div className=\"mt-4 space-y-3 text-sm text-slate-700\">\n        {items.map((item) => (\n          <div key={item.key} className=\"flex items-center justify-between\">\n            <span>\n              {item.name} × {item.quantity}\n            </span>\n            <span>${item.total.toFixed(2)}</span>\n          </div>\n        ))}\n      </div>\n      <div className=\"mt-4 border-t border-slate-200 pt-4 text-sm text-slate-700\">\n        <div className=\"flex items-center justify-between\">\n          <span>Subtotal</span>\n          <span>${baseTotal.toFixed(2)}</span>\n        </div>\n        <div className=\"flex items-center justify-between text-slate-500\">\n          <span>Envío</span>\n          <span>{deliveryInfo ? `$${deliveryFee.toFixed(2)}` : \"$0.00\"}</span>\n        </div>\n        <div className=\"mt-3 flex items-center justify-between text-base font-semibold text-slate-900\">\n          <span>Total</span>\n          <span>${orderTotal.toFixed(2)}</span>\n        </div>\n      </div>\n      {deliveryInfo && (\n        <div className=\"mt-4 rounded-xl border border-slate-200 bg-slate-900/5 px-3 py-2 text-xs text-slate-600\">\n          Envío calculado {deliveryInfo.source === \"ors\" ? \"con ORS\" : \"con estimación\"}. Distancia aproximada: {deliveryInfo.distanceMeters ? `${(deliveryInfo.distanceMeters / 1000).toFixed(1)} km` : \"N/D\"}.\n        </div>\n      )}\n    </div>\n  )\n}\n\nfunction derivePickupOptions(address: string): PickupOption[] {\n  if (!address) return []\n  const normalized = address.toLowerCase()\n\n  const options: PickupOption[] = []\n  distributorLocations.forEach((location) => {\n    location.businesses.forEach((business) => {\n      const cityFragments = business.cityState.toLowerCase().split(/\\s|,/).filter(Boolean)\n      let score = 0\n      cityFragments.forEach((fragment) => {\n        if (fragment.length > 3 && normalized.includes(fragment)) {\n          score += 2\n        }\n      })\n      if (normalized.includes(business.name.toLowerCase())) {\n        score += 3\n      }\n      if (!score && normalized.includes(location.city.toLowerCase())) {\n        score += 1\n      }\n      options.push({\n        id: `${business.name}-${business.address}`,\n        name: business.name,\n        address: business.address,\n        cityState: business.cityState,\n        score,\n      })\n    })\n  })\n\n  const sorted = options.sort((a, b) => b.score - a.score)\n  return sorted.slice(0, 3).map((option, index) => ({ ...option, score: option.score + (3 - index) }))\n}\n\nfunction deriveDeliveryInfo(address: string, options: PickupOption[]): DeliveryInfo | null {\n  if (!address) return null\n  const candidates = options.length ? options : derivePickupOptions(address)\n  if (!candidates.length) return null\n  const best = candidates[0]\n  const minutesEstimated = Math.max(20, 30 - best.score * 2)\n  const minutesCapped = Math.min(minutesEstimated, 45)\n  console.log({ step: \"delivery-estimate\", selectedAlly: best.id, minutesEstimated, minutesCapped })\n  const fee = minutesCapped * 0.5\n  return {\n    partnerId: best.id,\n    partnerName: best.name,\n    partnerAddress: best.address,\n    partnerCityState: best.cityState,\n    minutes: minutesEstimated,\n    minutesCapped,\n    fee,\n    distanceMeters: null, // Placeholder, will be calculated by ORS\n    source: \"fallback\", // Placeholder, will be determined by ORS\n  }\n}\n\nfunction calculateDistance(lat1: number, lng1: number, lat2: number, lng2: number) {\n  const R = 6371e3\n  const toRad = (value: number) => (value * Math.PI) / 180\n  const φ1 = toRad(lat1)\n  const φ2 = toRad(lat2)\n  const Δφ = toRad(lat2 - lat1)\n  const Δλ = toRad(lng2 - lng1)\n\n  const a = Math.sin(Δφ / 2) ** 2 + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) ** 2\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n\n  return R * c\n}"],"names":[],"mappings":"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","debugId":null}}]
}