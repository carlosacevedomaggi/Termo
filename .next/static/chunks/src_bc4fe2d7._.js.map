{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/chickynice/Desktop/termo/src/shared/payments.ts"],"sourcesContent":["export type PaymentCurrency = 'USD' | 'VES' | 'USDT'\r\n\r\nexport type PaymentField = {\r\n  id: string\r\n  label: string\r\n  type: 'text' | 'email' | 'select'\r\n  placeholder?: string\r\n  required?: boolean\r\n  options?: { label: string; value: string }[]\r\n}\r\n\r\nexport type PaymentMethod = {\r\n  id: 'zelle' | 'pagomovil' | 'bank' | 'binance' | 'card' | 'paypal'\r\n  label: string\r\n  description?: string\r\n  currency: PaymentCurrency\r\n  merchantInfo: { label: string; value: string }[]\r\n  fields: PaymentField[]\r\n}\r\n\r\nexport const VENEZUELAN_BANK_OPTIONS: { label: string; value: string }[] = [\r\n  { label: 'Banco de Venezuela (0102)', value: '0102' },\r\n  { label: 'Banesco (0134)', value: '0134' },\r\n  { label: 'Mercantil (0105)', value: '0105' },\r\n  { label: 'Provincial (0108)', value: '0108' },\r\n  { label: 'BNC (0191)', value: '0191' },\r\n]\r\n\r\nconst MERCHANT = {\r\n  zelleName: 'TerMo Store',\r\n  zelleEmail: 'your-zelle-email@example.com',\r\n  pmFullName: 'TerMo Store, C.A.',\r\n  pmPhone: '0412-0000000',\r\n  pmNationalId: 'V-12345678',\r\n  pmBankName: 'Banesco',\r\n  pmBankCode: '0134',\r\n  bankFullName: 'TerMo Store, C.A.',\r\n  bankNationalId: 'J-12345678-9',\r\n  bankName: 'Mercantil',\r\n  bankAccountType: 'Cuenta Corriente',\r\n  bankAccountNumber: '0105-0000-00-0000000000',\r\n  binancePayId: '123456789',\r\n  usdtTrc20Address: 'Txxxxxxxxxxxxxxxxxxxxxxxxxxxx',\r\n}\r\n\r\nexport const PAYMENT_METHODS: PaymentMethod[] = [\r\n  {\r\n    id: 'paypal',\r\n    label: 'PayPal (USD)',\r\n    description: 'Pay using your PayPal account',\r\n    currency: 'USD',\r\n    merchantInfo: [\r\n      { label: 'PayPal', value: 'paypal-business@example.com' },\r\n    ],\r\n    fields: [\r\n      { id: 'paypalEmail', label: 'Your PayPal email', type: 'email', required: true },\r\n      { id: 'paypalTxn', label: 'Transaction ID (optional)', type: 'text', placeholder: 'e.g., 9AB12345CD6789012' },\r\n    ],\r\n  },\r\n  {\r\n    id: 'card',\r\n    label: 'Credit/Debit Card',\r\n    description: 'Pay securely with your card',\r\n    currency: 'USD',\r\n    merchantInfo: [\r\n      { label: 'Status', value: 'Enabled' },\r\n    ],\r\n    fields: [\r\n      { id: 'cardNumber', label: 'Card number', type: 'text', required: true, placeholder: '1234 5678 9012 3456' },\r\n      { id: 'cardExpiry', label: 'Expiry (MM/YY)', type: 'text', required: true, placeholder: 'MM/YY' },\r\n      { id: 'cardCvv', label: 'CVV', type: 'text', required: true, placeholder: '123' },\r\n      { id: 'nationalId', label: 'N° de cédula', type: 'text', required: true, placeholder: 'V-00000000' },\r\n    ],\r\n  },\r\n  {\r\n    id: 'zelle',\r\n    label: 'Zelle (USD)',\r\n    description: 'Transfer via Zelle in USD',\r\n    currency: 'USD',\r\n    merchantInfo: [\r\n      { label: 'Recipient name', value: MERCHANT.zelleName },\r\n      { label: 'Zelle email', value: MERCHANT.zelleEmail },\r\n    ],\r\n    fields: [\r\n      { id: 'senderName', label: 'Sender full name', type: 'text', required: true },\r\n      { id: 'senderEmail', label: 'Sender email', type: 'email', required: true },\r\n      { id: 'confirmation', label: 'Confirmation number (optional)', type: 'text', placeholder: 'e.g., ABC123' },\r\n    ],\r\n  },\r\n  {\r\n    id: 'pagomovil',\r\n    label: 'Pago Móvil (VES)',\r\n    description: 'Pago móvil interbancario en bolívares',\r\n    currency: 'VES',\r\n    merchantInfo: [\r\n      { label: 'Banco', value: `${MERCHANT.pmBankName} (${MERCHANT.pmBankCode})` },\r\n      { label: 'Titular', value: MERCHANT.pmFullName },\r\n      { label: 'Teléfono', value: MERCHANT.pmPhone },\r\n      { label: 'Cédula/RIF', value: MERCHANT.pmNationalId },\r\n    ],\r\n    fields: [\r\n      { id: 'payerPhone', label: 'Tu teléfono (Pago Móvil)', type: 'text', required: true, placeholder: '04xx-xxxxxxx' },\r\n      { id: 'payerId', label: 'Tu cédula/RIF', type: 'text', required: true, placeholder: 'V-xxxxxxx' },\r\n      { id: 'payerBank', label: 'Tu banco', type: 'select', required: true, options: VENEZUELAN_BANK_OPTIONS },\r\n      { id: 'reference', label: 'Referencia de pago', type: 'text', required: true },\r\n    ],\r\n  },\r\n  {\r\n    id: 'bank',\r\n    label: 'Transferencia bancaria (VES)',\r\n    description: 'Transferencia bancaria tradicional en bolívares',\r\n    currency: 'VES',\r\n    merchantInfo: [\r\n      { label: 'Banco', value: MERCHANT.bankName },\r\n      { label: 'Tipo de cuenta', value: MERCHANT.bankAccountType },\r\n      { label: 'Nº de cuenta', value: MERCHANT.bankAccountNumber },\r\n      { label: 'Titular', value: MERCHANT.bankFullName },\r\n      { label: 'Cédula/RIF', value: MERCHANT.bankNationalId },\r\n    ],\r\n    fields: [\r\n      { id: 'payerBank', label: 'Tu banco', type: 'select', required: true, options: VENEZUELAN_BANK_OPTIONS },\r\n      { id: 'reference', label: 'Referencia de transferencia', type: 'text', required: true },\r\n    ],\r\n  },\r\n  {\r\n    id: 'binance',\r\n    label: 'Binance Pay / USDT',\r\n    description: 'Pago en USDT (Binance Pay o TRC20)',\r\n    currency: 'USDT',\r\n    merchantInfo: [\r\n      { label: 'Binance Pay ID', value: MERCHANT.binancePayId },\r\n      { label: 'USDT TRC20', value: MERCHANT.usdtTrc20Address },\r\n    ],\r\n    fields: [\r\n      { id: 'payerHandle', label: 'Tu usuario (o email) de Binance', type: 'text', required: true },\r\n      { id: 'txid', label: 'TXID / Comprobante', type: 'text', placeholder: 'Opcional' },\r\n    ],\r\n  },\r\n]\r\n\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/chickynice/Desktop/termo/src/app/checkout/page.tsx"],"sourcesContent":["\"use client\"\r\nimport { useMemo, useState } from 'react'\r\nimport { useCartStore } from '@/store/cart'\r\nimport { PAYMENT_METHODS } from '@/shared/payments'\r\n\r\nexport default function CheckoutPage() {\r\n  const { items, clear } = useCartStore()\r\n  const total = items.reduce((acc, i) => acc + i.price * (i.quantity ?? 1), 0)\r\n  const [status, setStatus] = useState<'idle'|'processing'|'done'>('idle')\r\n  const [selectedMethodId, setSelectedMethodId] = useState(PAYMENT_METHODS[0].id)\r\n  const selectedMethod = useMemo(() => PAYMENT_METHODS.find(m => m.id === selectedMethodId)!, [selectedMethodId])\r\n  const [fieldValues, setFieldValues] = useState<Record<string, string>>({})\r\n  const [cardRegion, setCardRegion] = useState<'US'|'VE'>('US')\r\n  const [errors, setErrors] = useState<Record<string, string>>({})\r\n\r\n  const onSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    const newErrors: Record<string, string> = {}\r\n    selectedMethod.fields.forEach(f => { if (f.required && !fieldValues[f.id]) newErrors[f.id] = 'Required' })\r\n    if (!fieldValues['name']) newErrors['name'] = 'Required'\r\n    if (!fieldValues['email']) newErrors['email'] = 'Required'\r\n    if (!fieldValues['address']) newErrors['address'] = 'Required'\r\n    if (Object.keys(newErrors).length) { setErrors(newErrors); return }\r\n    setErrors({})\r\n    setStatus('processing')\r\n    try {\r\n      const res = await fetch('/api/orders', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          name: fieldValues['name'],\r\n          email: fieldValues['email'],\r\n          address: fieldValues['address'],\r\n          method: selectedMethod.id,\r\n          currency: selectedMethod.currency,\r\n          amount: Math.round(total * 100),\r\n          items: items.map(i => ({ id: i.id, name: i.name, price: i.price, quantity: i.quantity ?? 1 })),\r\n        })\r\n      })\r\n      if (!res.ok) throw new Error('Order creation failed')\r\n      const data = await res.json()\r\n      console.log('Order created', data)\r\n      setStatus('done'); clear()\r\n    } catch (err) {\r\n      console.error(err)\r\n      setStatus('idle')\r\n    }\r\n  }\r\n\r\n  if (status === 'done') {\r\n    return (\r\n      <div className=\"container-edge py-14\">\r\n        <h1 className=\"text-3xl font-semibold\">Thank you</h1>\r\n        <p className=\"mt-2 opacity-80\">Your order has been placed.</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-edge py-14 grid lg:grid-cols-2 gap-10\">\r\n      <div>\r\n        <h1 className=\"text-2xl font-semibold mb-6\">Checkout</h1>\r\n        <form onSubmit={onSubmit} className=\"space-y-6\">\r\n          <div className=\"grid gap-4\">\r\n            <div>\r\n              <label className=\"text-sm opacity-70\">Name</label>\r\n              <input className=\"mt-1 w-full rounded-lg border border-border px-3 py-2\" value={fieldValues['name'] ?? ''} onChange={(e)=>setFieldValues(v=>({...v,name:e.target.value}))} />\r\n              {errors['name'] && <p className=\"text-xs text-red-600 mt-1\">{errors['name']}</p>}\r\n            </div>\r\n            <div>\r\n              <label className=\"text-sm opacity-70\">Email</label>\r\n              <input type=\"email\" className=\"mt-1 w-full rounded-lg border border-border px-3 py-2\" value={fieldValues['email'] ?? ''} onChange={(e)=>setFieldValues(v=>({...v,email:e.target.value}))} />\r\n              {errors['email'] && <p className=\"text-xs text-red-600 mt-1\">{errors['email']}</p>}\r\n            </div>\r\n            <div>\r\n              <label className=\"text-sm opacity-70\">Address</label>\r\n              <input className=\"mt-1 w-full rounded-lg border border-border px-3 py-2\" value={fieldValues['address'] ?? ''} onChange={(e)=>setFieldValues(v=>({...v,address:e.target.value}))} />\r\n              {errors['address'] && <p className=\"text-xs text-red-600 mt-1\">{errors['address']}</p>}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"space-y-3\">\r\n            <div className=\"font-medium\">Payment method</div>\r\n            <div className=\"grid gap-3\">\r\n              {PAYMENT_METHODS.map(m => (\r\n                <label key={m.id} className={`border rounded-xl p-3 cursor-pointer transition-colors ${selectedMethodId===m.id? 'border-black bg-black/[0.02]' : 'border-border hover:bg-muted'}`}>\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <input type=\"radio\" name=\"payment\" className=\"accent-black\" checked={selectedMethodId===m.id} onChange={()=>setSelectedMethodId(m.id)} />\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <span className=\"font-medium\">{m.label}</span>\r\n                        <span className=\"text-xs opacity-70\">{m.currency}</span>\r\n                      </div>\r\n                      {m.description && <p className=\"text-xs opacity-70 mt-0.5\">{m.description}</p>}\r\n                    </div>\r\n                  </div>\r\n                </label>\r\n              ))}\r\n            </div>\r\n            {selectedMethod.id === 'card' && (\r\n              <div className=\"flex items-center gap-3 mt-1\">\r\n                <span className=\"text-xs opacity-70\">Card region</span>\r\n                <div className=\"inline-flex rounded-md border border-border overflow-hidden\">\r\n                  <button type=\"button\" onClick={()=>setCardRegion('US')} className={`px-2 py-1 text-xs ${cardRegion==='US'?'bg-black text-white':'bg-white'}`}>🇺🇸 US</button>\r\n                  <button type=\"button\" onClick={()=>setCardRegion('VE')} className={`px-2 py-1 text-xs ${cardRegion==='VE'?'bg-black text-white':'bg-white'}`}>🇻🇪 VE</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"border border-border rounded-xl p-4\">\r\n              <div className=\"text-sm font-medium mb-2\">Instructions</div>\r\n              <ul className=\"text-sm space-y-1\">\r\n                {selectedMethod.merchantInfo.map(info => (\r\n                  <li key={info.label} className=\"flex items-center justify-between gap-4\">\r\n                    <span className=\"opacity-70\">{info.label}</span>\r\n                    <span className=\"font-medium\">{info.value}</span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n              {selectedMethod.id === 'card' && (\r\n                <div className=\"mt-3 flex items-center gap-3 opacity-80\">\r\n                  <span className=\"text-xs\">We accept</span>\r\n                  <span className=\"inline-flex items-center gap-1\">\r\n                    <span className=\"text-xs font-semibold border px-1.5 py-0.5 rounded\">VISA</span>\r\n                    <span className=\"text-xs font-semibold border px-1.5 py-0.5 rounded\">Mastercard</span>\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"grid gap-4\">\r\n              {selectedMethod.fields.filter(f => !(selectedMethod.id==='card' && cardRegion==='US' && f.id==='nationalId')).map(f => (\r\n                <div key={f.id}>\r\n                  <label className=\"text-sm opacity-70\">{f.label}</label>\r\n                  {f.type === 'select' ? (\r\n                    <select className=\"mt-1 w-full rounded-lg border border-border px-3 py-2 bg-white\" value={fieldValues[f.id] ?? ''} onChange={(e)=>setFieldValues(v=>({...v,[f.id]:e.target.value}))}>\r\n                      <option value=\"\">Select…</option>\r\n                      {(f.options ?? []).map(o => <option key={o.value} value={o.value}>{o.label}</option>)}\r\n                    </select>\r\n                  ) : (\r\n                    <input type={f.type==='email'?'email':'text'} placeholder={f.placeholder} className=\"mt-1 w-full rounded-lg border border-border px-3 py-2\" value={fieldValues[f.id] ?? ''} onChange={(e)=>setFieldValues(v=>({...v,[f.id]:e.target.value}))} />\r\n                  )}\r\n                  {errors[f.id] && <p className=\"text-xs text-red-600 mt-1\">{errors[f.id]}</p>}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <button disabled={status==='processing'} className=\"btn btn-primary\">{status==='processing' ? 'Processing…' : 'Place order'}</button>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"border border-border rounded-xl p-5 h-fit\">\r\n        <div className=\"font-medium mb-3\">Order Summary</div>\r\n        <div className=\"space-y-2 text-sm\">\r\n          {items.map(i => (\r\n            <div key={i.id} className=\"flex items-center justify-between\">\r\n              <span>{i.name} × {i.quantity ?? 1}</span>\r\n              <span>${i.price * (i.quantity ?? 1)}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"mt-4 flex items-center justify-between\">\r\n          <span className=\"opacity-70\">Total</span>\r\n          <span className=\"font-medium\">${total}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}